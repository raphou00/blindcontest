{"version":3,"file":"static/js/main.b2a0e022.js","mappings":"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","sources":["lib/supabase.ts","components/AuthProvider.tsx","components/Layout.tsx","components/Styles.tsx","screens/Home.tsx","lib/socket.ts","components/Category.tsx","screens/Create.tsx","screens/Join.tsx","components/PlayerList.tsx","screens/Lobby.tsx","lib/search.ts","components/SearchSong.tsx","components/Ranking.tsx","components/Timer.tsx","screens/Game.tsx","screens/Results.tsx","screens/Auth.tsx","screens/Profil.tsx","components/Navigation.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport { createClient, SupabaseClient } from \"@supabase/supabase-js\";\r\n\r\nimport \"react-native-url-polyfill/auto\";\r\n\r\nconst supa_url: string = \"https://dhnvcwntyfjpzhzdelht.supabase.co\";\r\nconst supa_anon: string = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRobnZjd250eWZqcHpoemRlbGh0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTY0OTAxNDUsImV4cCI6MjAxMjA2NjE0NX0.EbfxrScGQ_Rp58UzZAZQB2TwJqh224J6XoFgQ1j9uFw\";\r\n\r\nconst supabase: SupabaseClient = createClient(supa_url, supa_anon, {\r\n    auth: {\r\n        storage: AsyncStorage,\r\n        autoRefreshToken: true,\r\n        persistSession: true,\r\n        detectSessionInUrl: false\r\n    }\r\n});\r\n\r\nexport default supabase;","import { useState, useEffect, useContext, createContext, ReactNode } from \"react\";\r\nimport { User, AuthChangeEvent, Session } from \"@supabase/supabase-js\";\r\nimport supabase from \"../lib/supabase\";\r\n\r\ntype AuthContext = {\r\n    user: User | null; \r\n};\r\n\r\nconst authContext: React.Context<AuthContext | {}> = createContext({});\r\n\r\nconst AuthProvider = ({ children }: { children: ReactNode }): JSX.Element => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n\r\n    useEffect(() => {\r\n        const { data: { subscription } } = supabase.auth.onAuthStateChange((_event: AuthChangeEvent, session: Session | null) => {\r\n            if (session) setUser(session.user);\r\n            else setUser(null);\r\n        });\r\n\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <authContext.Provider value={{ user }}>\r\n            { children }\r\n        </authContext.Provider>\r\n    );\r\n};\r\n\r\nconst useAuth = () => useContext(authContext) as AuthContext;\r\n\r\nexport default AuthProvider;\r\nexport { useAuth };","import { useEffect, useRef } from \"react\";\r\nimport { StyleSheet, Animated } from \"react-native\";\r\n\r\nexport default function Layout({ children }: { children: React.ReactNode }) {\r\n    const fadeAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        Animated.timing(fadeAnim, {\r\n            toValue: 1,\r\n            duration: 500,\r\n            useNativeDriver: false,\r\n        }).start();\r\n\r\n        return;\r\n    }, []);\r\n\r\n    return (\r\n        <Animated.View style={{...styles.container, opacity: fadeAnim}}>\r\n            {children}\r\n        </Animated.View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingTop: 10,\r\n    },\r\n});","import { StyleSheet } from \"react-native\";\r\n\r\nexport default StyleSheet.create({\r\n    input: {\r\n        width: 300,\r\n        paddingTop: 10,\r\n        paddingRight: 10,\r\n        paddingBottom: 10,\r\n        paddingLeft: 10,\r\n        textAlign: \"center\",\r\n        borderRadius: 6,\r\n        borderWidth: 1,\r\n        borderColor: \"slateblue\",\r\n        backgroundColor: \"#111111\",\r\n        color: \"#FFFFFF\",\r\n        fontWeight: \"bold\",\r\n        shadowOffset: {\r\n            width: 3,\r\n            height: 3\r\n        },\r\n        shadowRadius: 6,\r\n        shadowColor: \"#000\",\r\n        shadowOpacity: 1\r\n    },\r\n    button: {\r\n        borderRadius: 6,\r\n        borderWidth: 1,\r\n        borderColor: \"#111111\",\r\n        shadowOffset: {\r\n            width: 3,\r\n            height: 3\r\n        },\r\n        shadowRadius: 6,\r\n        shadowColor: \"#000\",\r\n        shadowOpacity: 1,\r\n        padding: 6,\r\n        backgroundColor: \"slateblue\",\r\n        textAlign: \"center\"\r\n    },\r\n    buttonText: {\r\n        textAlign: \"center\",\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\"\r\n    }\r\n});","import React from \"react\";\r\nimport { StyleSheet, View, Text, Image } from \"react-native\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { useAuth } from \"../components/AuthProvider\";\r\nimport Layout from \"../components/Layout\";\r\nimport gstyles from \"../components/Styles\";\r\n\r\nexport default function Home() {\r\n    const { user } = useAuth();\r\n\r\n    return (\r\n        <Layout>\r\n            <Image style={styles.homeImg} source={require(\"../assets/blindcontest.png\")} />\r\n            <Text style={styles.homeTitle}>blindcontest</Text>\r\n\r\n            <View style={styles.homeButtons}>\r\n                <Link to=\"/join\">\r\n                    <View style={{ ...gstyles.button, width: 300 }}>\r\n                        <Text style={gstyles.buttonText}>Rejoindre une partie</Text>\r\n                    </View>\r\n                </Link>\r\n\r\n                <Link to=\"/create\">\r\n                    <View style={{ ...gstyles.button, width: 300 }}>\r\n                        <Text style={gstyles.buttonText}>Créer une partie</Text>\r\n                    </View>\r\n                </Link>\r\n\r\n                <Link to=\"/auth\">\r\n                    <View style={{ ...gstyles.button, width: 300 }}>\r\n                        <Text style={gstyles.buttonText}>{user ? \"Profil\" : \"Connexion\"}</Text>\r\n                    </View>\r\n                </Link>\r\n            </View>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    homeImg: {\r\n        height: 200,\r\n        width: 200\r\n    },\r\n    homeTitle: {\r\n        width: 300,\r\n        fontSize: 32,\r\n        textTransform: \"uppercase\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        color: \"slateblue\"\r\n    },\r\n    homeButtons: {\r\n        width: 300,\r\n        gap: 10,\r\n        marginTop: 30\r\n    }\r\n})","import io, { Socket } from \"socket.io-client\";\r\n\r\nconst server: string = \"https://162.19.243.4:3000\";\r\nconst socket: Socket = io(server);\r\n\r\nexport default socket;","import { useEffect, useState, Dispatch, SetStateAction } from \"react\";\r\nimport { StyleSheet, View, Text, Image, Pressable, ScrollView } from \"react-native\";\r\nimport socket from \"../lib/socket\";\r\n\r\ntype CategoryProps = {\r\n    activeCategories: string[],\r\n    setActiveCategories: Dispatch<SetStateAction<string[]>>\r\n};\r\n\r\ntype CardCategoryProps = {\r\n    id: string,\r\n    name: string,\r\n    image: string,\r\n    activeCategories: string[],\r\n    setActiveCategories: Dispatch<SetStateAction<string[]>>\r\n};\r\n\r\nfunction CardCategory({ id, name, image, activeCategories, setActiveCategories }: CardCategoryProps) {\r\n    const [active, setActive] = useState<boolean>(false);\r\n\r\n    const toggleCategory = () => {\r\n        setActiveCategories((prev: string[]) => {\r\n            if (!prev.includes(id)) prev.push(id);\r\n            else prev.splice(prev.indexOf(id), 1);\r\n\r\n            setActive(activeCategories.includes(id));\r\n\r\n            return prev;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Pressable style={{ width: 130 }} onPress={toggleCategory}>\r\n            <View style={{ ...styles.categoryCard, borderColor: active ? \"#535bf2\" : \"#FFFFFF\" }}>\r\n                <Image style={styles.categoryCardImg} source={{ uri: image }} />\r\n                <Text style={styles.categoryCardName}>{name}</Text>\r\n            </View>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nexport default function Category({ activeCategories, setActiveCategories }: CategoryProps) {\r\n    const [categories, setCategories] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"categories\");\r\n\r\n        const categoriesListener = (data: { categories: any[] }) => setCategories(data.categories);\r\n        socket.on(\"categories\", categoriesListener);\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView style={styles.categoryContainer}>\r\n            {\r\n                categories.map((e: any) => \r\n                    <CardCategory\r\n                        key={e.id}\r\n                        id={e.id}\r\n                        name={e.name}\r\n                        image={e.icons[0].url}\r\n                        activeCategories={activeCategories} \r\n                        setActiveCategories={setActiveCategories}\r\n                    />)\r\n            }\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    categoryContainer: {\r\n        height: 250,\r\n        width: 290,\r\n        overflow: \"scroll\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    categoryCard: {\r\n        height: 100,\r\n        width: 275,\r\n        borderRadius: 6,\r\n        borderWidth: 2,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        margin: 5\r\n    },\r\n    categoryCardImg: {\r\n        height: 50,\r\n        width: 50,\r\n        borderRadius: 6\r\n    },\r\n    categoryCardName: {\r\n        color: \"#FFFFFF\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    },\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Text, TextInput, Pressable, Alert } from \"react-native\";\r\nimport socket from \"../lib/socket\";\r\nimport { ScreenProps } from \"../lib/type\";\r\nimport Category from \"../components/Category\";\r\nimport gstyles from \"../components/Styles\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function Create({ navigation }: ScreenProps) {\r\n    const [activeCategories, setActiveCategories] = useState<any[]>([]);\r\n    const [room, setRoom] = useState<string>(\"\");\r\n    const [time, setTime] = useState<string>(\"20\");\r\n    const [nbrQuestions, setNbrQuestions] = useState<string>(\"10\");\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"create_room\");\r\n        socket.on(\"create_room\", data => setRoom(data.key));\r\n        \r\n        return;\r\n    }, [navigation]);\r\n\r\n    const handleCreate = () => {\r\n        const nTime = Number.parseInt(time);\r\n        const nQuestions = Number.parseInt(nbrQuestions);\r\n\r\n        if (isNaN(nTime) || isNaN(nQuestions)) {\r\n            Alert.alert(\"Entrez des valeurs valides\")\r\n            return;\r\n        }\r\n\r\n        socket.emit(\"update_room\", {\r\n            key: room,\r\n            time: nTime,\r\n            nbrQuestions: nQuestions,\r\n            categories: activeCategories\r\n        }, () => navigation.navigate(\"lobby\", { room: room, host: true }));\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Text style={styles.createTitle}>\r\n                Clé <Text style={{ ...styles.createTitle, color: \"slateblue\" }}>{room}</Text>\r\n            </Text>\r\n\r\n            <View style={styles.createBox}>\r\n                <Text style={styles.createBoxTitle}>Catégories</Text>\r\n                <Category\r\n                    activeCategories={activeCategories}\r\n                    setActiveCategories={setActiveCategories} />\r\n            </View>\r\n\r\n            <View style={styles.createBox}>\r\n                <Text style={styles.createBoxTitle}>Temps pour répondre (sec)</Text>\r\n                <TextInput\r\n                    style={[gstyles.input, styles.createInput]}\r\n                    value={time}\r\n                    onChangeText={setTime}\r\n                    inputMode=\"numeric\" />\r\n            </View>\r\n\r\n            <View style={styles.createBox}>\r\n                <Text style={styles.createBoxTitle}>Nombre de musiques</Text>\r\n                <TextInput\r\n                    style={[gstyles.input, styles.createInput]}\r\n                    value={nbrQuestions}\r\n                    onChangeText={setNbrQuestions}\r\n                    inputMode=\"numeric\" />\r\n            </View>\r\n\r\n            <Pressable onPress={handleCreate}>\r\n                <View style={[gstyles.button, styles.createButton]}>\r\n                    <Text style={gstyles.buttonText}>Créer et rejoindre</Text>\r\n                </View>\r\n            </Pressable>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    createTitle: {\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        marginBottom: 10,\r\n        textDecorationLine: \"underline\",\r\n        textDecorationStyle: \"solid\"\r\n    },\r\n    createPlayers: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"50%\",\r\n        width: 300,\r\n        borderWidth: 2,\r\n        borderColor: \"slateblue\",\r\n        borderStyle: \"solid\",\r\n        borderTopLeftRadius: 6,\r\n        borderTopRightRadius: 6,\r\n        borderBottomRightRadius: 6,\r\n        borderBottomLeftRadius: 6,\r\n        overflow: \"hidden\"\r\n    },\r\n    createPlayersTitle: {\r\n        width: \"100%\",\r\n        height: 40,\r\n        borderBottomWidth: 3,\r\n        borderColor: \"slateblue\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n        gap: 10\r\n    },\r\n    createPlayersTitleText: {\r\n        textTransform: \"uppercase\",\r\n        fontSize: 22,\r\n        fontWeight: \"bold\",\r\n        textAlign: \"right\",\r\n        color: \"#FFFFFF\"\r\n    },\r\n    createPlayersTitleNbr: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        color: \"slateblue\"\r\n    },\r\n    createPlayersList: {\r\n        overflowY: \"scroll\",\r\n        width: \"100%\",\r\n        height: 400\r\n    },\r\n    createPlayersListName: {\r\n        width: \"90%\",\r\n        marginTop: 0,\r\n        marginRight: \"auto\",\r\n        marginBottom: 0,\r\n        marginLeft: \"auto\",\r\n        borderBottomWidth: 1,\r\n        borderColor: \"slateblue\",\r\n        textAlign: \"center\",\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        paddingTop: 5,\r\n        paddingRight: 0,\r\n        paddingBottom: 5,\r\n        paddingLeft: 0,\r\n        color: \"#FFFFFF\"\r\n    },\r\n\r\n    createBox: {\r\n        width: 300,\r\n        height: \"auto\",\r\n        borderWidth: 2,\r\n        borderRadius: 6,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"slateblue\",\r\n        backgroundColor: \"#111111\",\r\n        padding: 5,\r\n        marginTop: 20\r\n    },\r\n    createBoxTitle: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        margin: 5\r\n    },\r\n    createInput: {\r\n        width: 285\r\n    },\r\n    createButton: {\r\n        marginTop: 20,\r\n        width: 300\r\n    }\r\n});","import { useState } from \"react\";\r\nimport { StyleSheet, View, Text, Image, TextInput, Pressable, Alert } from \"react-native\";\r\nimport socket from \"../lib/socket\";\r\nimport { ScreenProps } from \"../lib/type\";\r\nimport gstyles from \"../components/Styles\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function Join({ navigation }: ScreenProps) {\r\n    const [room, setRoom] = useState<string>(\"\");\r\n\r\n    const login = async () => {\r\n        if (!room) {\r\n            Alert.alert(\"Veuillez entrer une clé\");\r\n            return;\r\n        }\r\n\r\n        socket.emit(\"check_key\", { room: room });\r\n\r\n        socket.on(\"check_key\", data => {\r\n            if (data.access) {\r\n                navigation.navigate(\"lobby\", { room: room, host: false });\r\n            } else {\r\n                Alert.alert(\"Vous ne pouvez pas rejoindre cette partie\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Image style={styles.homeImg} source={require(\"../assets/blindcontest.png\")} />\r\n            <Text style={styles.homeTitle}>Rejoindre</Text>\r\n            \r\n            <View style={styles.homeButtons}>\r\n                <TextInput style={gstyles.input} value={room} onChangeText={setRoom} inputMode=\"search\" onSubmitEditing={login} placeholder=\"Clé...\" />\r\n\r\n                <Pressable style={gstyles.button} onPress={login}>\r\n                    <Text style={gstyles.buttonText}>Rejoindre la partie</Text>\r\n                </Pressable>\r\n            </View>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    homeImg: {\r\n        height: 200,\r\n        width: 200,\r\n    },\r\n    homeTitle: {\r\n        width: 300,\r\n        fontSize: 32,\r\n        textTransform: \"uppercase\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        color: \"slateblue\",\r\n    },\r\n    homeButtons: {\r\n        width: 300,\r\n        gap: 10,\r\n        marginTop: 30,\r\n    },\r\n});","import { StyleSheet, View, Text } from \"react-native\";\r\n\r\ntype PlayerListProps = {\r\n    players: any[];\r\n};\r\n\r\nexport default function PlayerList({ players }: PlayerListProps) {\r\n    return (\r\n        <View style={styles.players}>\r\n            <View style={styles.playersTitle}>\r\n                <Text style={styles.playersTitleText}>joueurs ({players.length})</Text>\r\n            </View>\r\n\r\n            <View style={styles.playersList}>\r\n                {\r\n                    players.length === 0 ? (\r\n                        <Text style={styles.playersListNoPlayer}>Aucun joueur pour le moment</Text>\r\n                    ) : (\r\n                        players.map((e: any) => <Text key={e.id} style={styles.playersListName}>{e.name}</Text>)\r\n                    )\r\n                }\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    players: {\r\n        backgroundColor: \"#111111\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"50%\",\r\n        width: 300,\r\n        borderWidth: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"slateblue\",\r\n        borderTopLeftRadius: 6,\r\n        borderTopRightRadius: 6,\r\n        borderBottomRightRadius: 6,\r\n        borderBottomLeftRadius: 6,\r\n        overflow: \"hidden\",\r\n    },\r\n    playersTitle: {\r\n        width: \"100%\",\r\n        height: \"10%\",\r\n        borderBottomWidth: 3,\r\n        borderColor: \"slateblue\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n    },\r\n    playersTitleText: {\r\n        display: \"flex\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n    },\r\n    playersTitleNbr: {\r\n        paddingLeft: 10,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        color: \"slateblue\",\r\n    },\r\n    playersList: {\r\n        overflowY: \"scroll\",\r\n        width: \"100%\",\r\n        height: \"90%\",\r\n    },\r\n    playersListNoPlayer: {\r\n        width: \"100%\",\r\n        height: 30,\r\n        color: \"#FFFFFF\",\r\n        fontWeight: \"bold\",\r\n        padding: 5,\r\n        textAlign: \"center\",\r\n    },\r\n    playersListName: {\r\n        width: \"90%\",\r\n        marginTop: 0,\r\n        marginRight: \"auto\",\r\n        marginBottom: 0,\r\n        marginLeft: \"auto\",\r\n        borderBottomWidth: 1,\r\n        borderColor: \"slateblue\",\r\n        textAlign: \"center\",\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        paddingTop: 5,\r\n        paddingRight: 0,\r\n        paddingBottom: 5,\r\n        paddingLeft: 0,\r\n        color: \"#FFFFFF\",\r\n    },\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View, Text, Pressable, TextInput, Alert } from \"react-native\";\r\nimport socket from \"../lib/socket\";\r\nimport { ScreenProps } from \"../lib/type\";\r\nimport PlayerList from \"../components/PlayerList\";\r\nimport gstyles from \"../components/Styles\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function Lobby({ navigation, route }: ScreenProps) {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [logged, setLogged] = useState<boolean>(false);\r\n    const [players, setPlayers] = useState<any[]>([]);\r\n\r\n    const { room, host } = route.params;\r\n    \r\n    useEffect(() => {\r\n        socket.emit(\"join_lobby\", { room });\r\n\r\n        socket.emit(\"players\", { room });\r\n\r\n        socket.on(\"players\", data => setPlayers(data.players));\r\n\r\n        socket.on(\"start_room\", () => navigation.navigate(\"game\", { room, host, name }));\r\n\r\n        return;\r\n    }, []);\r\n\r\n    const login = () => {\r\n        if (players.map(e => e.name).includes(name)) {\r\n            Alert.alert(\"Nom déjà dans la liste\");\r\n            return;\r\n        } else if (name.length < 3) {\r\n            Alert.alert(\"Nom trop court\");\r\n            return;\r\n        }\r\n\r\n        setLogged(true);\r\n\r\n        socket.emit(\"join_room\", { room: room, name: name });\r\n    }\r\n\r\n    const start = () => {\r\n        socket.emit(\"start_room\");\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Text style={styles.lobbyTitle}>\r\n                Clé <Text style={{ ...styles.lobbyTitle, color: \"slateblue\" }}>{room}</Text>\r\n            </Text>\r\n\r\n            <View style={styles.lobbyName}>\r\n                <View style={styles.lobbyNameBox}>\r\n                    <TextInput style={gstyles.input} onChangeText={setName} value={name} placeholder=\"Batman...\" />\r\n                    <Pressable style={{ ...gstyles.button, backgroundColor: logged ? \"grey\" : gstyles.button.backgroundColor }} onPress={login} disabled={logged}>\r\n                        <Text style={gstyles.buttonText}>Valider</Text>\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n\r\n            <PlayerList players={players} />\r\n\r\n            {\r\n                host && (\r\n                    <Pressable\r\n                        style={{ ...gstyles.button, width: 300, marginTop: 30, backgroundColor: !logged ? \"grey\" : gstyles.button.backgroundColor }}\r\n                        disabled={!logged}\r\n                        onPress={start}\r\n                    >\r\n                        <Text style={gstyles.buttonText}>Jouer</Text>\r\n                    </Pressable>\r\n                )\r\n            }\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    lobbyTitle: {\r\n        fontSize: 25,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        marginBottom: 30,\r\n        textDecorationLine: \"underline\",\r\n        textDecorationStyle: \"solid\"\r\n    },\r\n    lobbyName: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        width: 300\r\n    },\r\n    lobbyNameBox: {\r\n        gap: 10,\r\n        marginBottom: 30\r\n    }\r\n});","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\r\nimport socket from \"./socket\";\r\n\r\nconst spotifyApi: AxiosInstance = axios.create({\r\n    baseURL: \"https://api.spotify.com/v1/\",\r\n});\r\n\r\nsocket.emit(\"token\");\r\n\r\nsocket.on(\"token\", (data) => {\r\n    spotifyApi.defaults.headers[\"Authorization\"] = data.token;\r\n});\r\n\r\nexport const searchSongs = async (search: string): Promise<any[]> => {\r\n    const list: any[] = [];\r\n\r\n    const res: AxiosResponse = await spotifyApi.get(`search?q=${search}&type=track&limit=5`);\r\n\r\n    res.data.tracks.items.map((e: any) => {\r\n        list.push({\r\n            id: e.id,\r\n            title: e.name,\r\n            artists: e.artists.map((e: any) => e.name),\r\n            image: e.album.images[0].url,\r\n        });\r\n    });\r\n\r\n    return list;\r\n};","import { Dispatch, SetStateAction } from \"react\";\r\nimport { StyleSheet, View, Text, Image, Pressable } from \"react-native\";\r\nimport socket from \"../lib/socket\";\r\n\r\ntype SearchSongsProps = {\r\n    song: {\r\n        id: string;\r\n        title: string;\r\n        artists: string[];\r\n        image: string;\r\n    };\r\n    answered?: boolean | any;\r\n    setCorrect?: Dispatch<boolean> | any;\r\n    setAnswered?: Dispatch<SetStateAction<boolean>> | any;\r\n    setMyAnswer?: Dispatch<SetStateAction<boolean>> | any;\r\n};\r\n\r\nexport default function SearchSong({\r\n    song,\r\n    answered,\r\n    setAnswered,\r\n    setMyAnswer,\r\n    setCorrect,\r\n}: SearchSongsProps) {\r\n    const { id, title, artists, image } = song;\r\n\r\n    const onValidate = () => {\r\n        if (!setAnswered) return;\r\n\r\n        setMyAnswer(song);\r\n\r\n        socket.emit(\"answer_room\", { id: id }, (res: { correct: boolean }) => {\r\n            setAnswered(true);\r\n            setCorrect(res.correct as boolean);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Pressable onPress={onValidate}>\r\n            <View style={{ ...styles.song, backgroundColor: answered ? \"grey\" : \"#111111\" }}>\r\n                <Image style={styles.songImg} source={{ uri: image }} />\r\n                <View style={styles.songText}>\r\n                    <Text style={styles.songTitle}>{title}</Text>\r\n                    <Text style={styles.songArtist}>{artists.join(\", \")}</Text>\r\n                </View>\r\n            </View>\r\n        </Pressable>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    song: {\r\n        padding: 5,\r\n        height: 50,\r\n        width: 285,\r\n        borderWidth: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"slateblue\",\r\n        borderRadius: 6,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        overflow: \"hidden\",\r\n    },\r\n    songImg: {\r\n        height: 36,\r\n        width: 36,\r\n        borderRadius: 6,\r\n    },\r\n    songText: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: 36,\r\n        width: 500,\r\n        marginLeft: 10,\r\n    },\r\n    songTitle: {\r\n        height: 20,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        overflow: \"hidden\",\r\n    },\r\n    songArtist: {\r\n        height: 16,\r\n        fontSize: 14,\r\n        color: \"#CCC\",\r\n        overflow: \"hidden\",\r\n    },\r\n});\r\n","import { StyleSheet, View, Text } from \"react-native\";\r\n\r\ntype RankingProps = {\r\n    players: any[];\r\n    visible: boolean;\r\n};\r\n\r\nexport default function Ranking({ players, visible }: RankingProps) {\r\n    return (\r\n        <View style={{ ...styles.ranking, display: visible ? \"flex\" : \"none\" }}>\r\n            <View style={styles.rankingTitle}>\r\n                <Text style={styles.rankingTitleText}>classement ({players.length})</Text>\r\n            </View>\r\n\r\n            <View style={styles.rankingList}>\r\n                {\r\n                    players.map((e: any) => (\r\n                        <Text key={e.id} style={styles.rankingListName}>\r\n                            {e.name} - {e.point}\r\n                        </Text>\r\n                    ))\r\n                }\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    ranking: {\r\n        width: 300,\r\n        height: 500,\r\n        borderStyle: \"solid\",\r\n        borderWidth: 2,\r\n        borderColor: \"slateblue\",\r\n        borderRadius: 6,\r\n        backgroundColor: \"#111111\",\r\n    },\r\n    rankingTitle: {\r\n        width: \"100%\",\r\n        height: \"10%\",\r\n        borderBottomWidth: 3,\r\n        borderColor: \"slateblue\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n    },\r\n    rankingTitleText: {\r\n        display: \"flex\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n    },\r\n    rankingTitleNbr: {\r\n        paddingLeft: 10,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        color: \"slateblue\",\r\n    },\r\n    rankingList: {\r\n        overflowY: \"scroll\",\r\n        width: \"100%\",\r\n        height: \"90%\",\r\n    },\r\n    rankingListNoPlayer: {\r\n        width: \"100%\",\r\n        height: 30,\r\n        color: \"#FFFFFF\",\r\n        fontWeight: \"bold\",\r\n        padding: 5,\r\n        textAlign: \"center\",\r\n    },\r\n    rankingListName: {\r\n        width: \"90%\",\r\n        marginTop: 0,\r\n        marginRight: \"auto\",\r\n        marginBottom: 0,\r\n        marginLeft: \"auto\",\r\n        borderBottomWidth: 1,\r\n        borderColor: \"slateblue\",\r\n        textAlign: \"center\",\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n        paddingTop: 5,\r\n        paddingRight: 0,\r\n        paddingBottom: 5,\r\n        paddingLeft: 0,\r\n        color: \"#FFFFFF\",\r\n    },\r\n});","import { useState, useEffect } from \"react\";\r\n\r\nexport default function Timer({ nbr, play }: { nbr: number, play: boolean }) {\r\n    const [count, setCount] = useState<number>(nbr);\r\n    const [timerId, setTimerID] = useState<NodeJS.Timeout | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (play) {\r\n            setCount(nbr);\r\n            setTimerID(setInterval(() => setCount((prev) => prev - 1), 1000));\r\n        } else {\r\n            clearInterval(timerId!);\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(timerId!);\r\n        };\r\n    }, [play]);\r\n\r\n    return <>{count}</>;\r\n}","import { useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, Text, Image, TextInput, Pressable } from \"react-native\";\r\nimport { Audio } from \"expo-av\";\r\nimport socket from \"../lib/socket\";\r\nimport { searchSongs } from \"../lib/search\";\r\nimport { ScreenProps } from \"../lib/type\";\r\nimport SearchSong from \"../components/SearchSong\";\r\nimport Ranking from \"../components/Ranking\";\r\nimport gstyles from \"../components/Styles\";\r\nimport Layout from \"../components/Layout\";\r\nimport Timer from \"../components/Timer\";\r\n\r\nconst soundObject: Audio.Sound = new Audio.Sound();\r\n\r\nexport default function Game({ navigation, route }: ScreenProps) {\r\n    const [players, setPlayers] = useState<any[]>([]);\r\n    const [songs, setSongs] = useState<any[]>([]);\r\n    const [answer, setAnswer] = useState<any>(null);\r\n    const [myAnswer, setMyAnswer] = useState<any>(null);\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [answered, setAnswered] = useState<boolean>(false);\r\n    const [correct, setCorrect] = useState<boolean>(false);\r\n    const [rankingVisible, setRankingVisible] = useState<boolean>(false);\r\n    const [timer, setTimer] = useState<boolean>(false);\r\n    const [roomTime, setRoomTime] = useState<number>(20);\r\n\r\n    const { room, host, name } = route.params;\r\n\r\n    useEffect(() => {\r\n        onChangeSearch(\"Eminem\")\r\n        socket.emit(\"audio_room\");\r\n\r\n        socket.on(\"audio_room\", data => {\r\n            setRankingVisible(false);\r\n            setTimer(true);\r\n            setRoomTime(data.time);\r\n            playSong(data.audio);\r\n\r\n            console.log(data.cheat);\r\n        });\r\n\r\n        socket.on(\"answer_room\", data => {\r\n            setAnswer(data.answer);\r\n            setPlayers(data.players);\r\n            setAnswered(true);\r\n            setTimer(false);\r\n\r\n            setTimeout(() => {\r\n                setRankingVisible(true);\r\n            }, 5000);\r\n        });\r\n\r\n        socket.on(\"next_room\", () => {\r\n            onChangeSearch(\"Eminem\");\r\n            setSearch(\"\");\r\n            setMyAnswer(null);\r\n            setAnswer(false);\r\n            setAnswered(false);\r\n            setCorrect(false);\r\n        });\r\n\r\n        socket.on(\"results_room\", () => {\r\n            navigation.navigate(\"results\", { room, name });\r\n        });\r\n\r\n        return;\r\n    }, []);\r\n\r\n    const playSong = async (uri: string) => {\r\n        if ((await soundObject.getStatusAsync()).isLoaded) {\r\n            await soundObject.stopAsync();\r\n            await soundObject.unloadAsync();\r\n        }\r\n\r\n        await soundObject.loadAsync({ uri });\r\n        await soundObject.playAsync();\r\n    }\r\n\r\n    const onChangeSearch = async (e: string) => {\r\n        if (!e) return;\r\n        setSearch(e);\r\n        setSongs(await searchSongs(e));\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        socket.emit(\"next_room\", () => {\r\n            socket.emit(\"audio_room\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <View style={styles.game}>\r\n                {rankingVisible &&\r\n                    <View style={styles.ranking}>\r\n                        <Text style={styles.player}>{name}</Text>\r\n                        <Ranking players={players} visible={rankingVisible} />\r\n                        {\r\n                            host && (\r\n                                <Pressable style={{ ...gstyles.button, width: 300, marginTop: 10 }} onPress={nextQuestion}>\r\n                                    <Text style={gstyles.buttonText}>Suivant</Text>\r\n                                </Pressable>\r\n                            )\r\n                        }\r\n                    </View>\r\n                }\r\n\r\n                <View>\r\n                    <View style={styles.image}>\r\n                        {\r\n                            answer ? (\r\n                                <Image style={styles.imageResponse} source={{ uri: answer.image }} />\r\n                            ) : (\r\n                                <View style={styles.imageTextContainer}>\r\n                                    <Text style={styles.imageText}>\r\n                                        <Timer nbr={roomTime} play={timer} />\r\n                                    </Text>\r\n                                </View>\r\n                            )\r\n                        }\r\n                    </View>\r\n\r\n                    {\r\n                        answer && (\r\n                            <>\r\n                                <Text style={styles.titleResponse}>{answer.name}</Text>\r\n                                <Text style={styles.artistsResponse}>{answer.artists.join(\", \")}</Text>\r\n                            </>\r\n                        )\r\n                    }\r\n                </View>\r\n\r\n                {\r\n                    answered && (\r\n                        <>\r\n                            <View style={styles.result}>\r\n                                {\r\n                                    answer ? (\r\n                                        <View style={styles.resultBox}>\r\n                                            <Image style={styles.resultImg} source={correct ? require(\"../assets/correct.png\") : require(\"../assets/incorrect.png\")} />\r\n                                            <Text style={styles.resultText}>{correct ? \"Correcte\" : \"Incorrecte\"}</Text>\r\n                                        </View>\r\n                                    ) : (\r\n                                        <Text style={styles.resultTitle}>En attente du résultat</Text>\r\n                                    )\r\n                                }\r\n                            </View>\r\n\r\n                            {\r\n                                myAnswer && (\r\n                                    <View style={{ marginTop: 10, gap: 10 }}>\r\n                                        <Text style={styles.resultTitle}>Votre réponse</Text>\r\n                                        <SearchSong song={myAnswer} />\r\n                                    </View>\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    (!answer && !myAnswer) && (\r\n                        <View style={styles.search}>\r\n                            <Text style={styles.searchTitle}>Trouve la musique</Text>\r\n                            <TextInput style={[gstyles.input, styles.searchInput]} value={search} onChangeText={onChangeSearch} placeholder=\"Rechercher une musique...\" />\r\n\r\n                            <View style={{ ...styles.songContainer, marginTop: songs.length > 0 ? 10 : 0 }}>\r\n                                {songs.map((e: any) =>\r\n                                    <SearchSong\r\n                                        key={e.id}\r\n                                        song={e}\r\n                                        answered={answered}\r\n                                        setAnswered={setAnswered}\r\n                                        setMyAnswer={setMyAnswer}\r\n                                        setCorrect={setCorrect}\r\n                                    />)\r\n                                }\r\n                            </View>\r\n                        </View>\r\n                    )\r\n                }\r\n            </View>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    game: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"100%\"\r\n    },\r\n\r\n    ranking: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        backgroundColor: \"#000\",\r\n        zIndex: 1000,\r\n    },\r\n    rankingButton: {\r\n        position: \"absolute\",\r\n        top: 10,\r\n        right: 10,\r\n        zIndex: 10000\r\n    },\r\n    rankingImage: {\r\n        height: 30,\r\n        width: 30,\r\n        borderRadius: 50,\r\n        backgroundColor: \"#333333\",\r\n        borderWidth: 2,\r\n        borderColor: \"gold\"\r\n    },\r\n    player: {\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        fontSize: 30,\r\n        width: 300,\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    image: {\r\n        height: 300,\r\n        width: 300,\r\n        borderRadius: 10,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        overflow: \"hidden\"\r\n    },\r\n    imageTextContainer: {\r\n        height: 300,\r\n        width: 300,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#333333\"\r\n    },\r\n    imageText: {\r\n        fontSize: 50,\r\n        color: \"#CCC\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    imageResponse: {\r\n        width: 300,\r\n        height: 300\r\n    },\r\n\r\n    search: {\r\n        height: \"auto\",\r\n        width: 300,\r\n        padding: 5,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"#111111\",\r\n        borderWidth: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"slateblue\",\r\n        borderRadius: 6\r\n    },\r\n    searchTitle: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        margin: 5\r\n    },\r\n    searchInput: {\r\n        width: 285,\r\n        textAlign: \"left\"\r\n    },\r\n\r\n    songContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: 5\r\n    },\r\n\r\n    result: {\r\n        height: 100,\r\n        width: 300,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    resultTitle: {\r\n        color: \"#FFFFFF\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n    resultBox: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        gap: 5\r\n    },\r\n    resultImg: {\r\n        height: 60,\r\n        width: 60\r\n    },\r\n    resultText: {\r\n        color: \"#FFFFFF\",\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n\r\n    titleResponse: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        textAlign: \"center\"\r\n    },\r\n    artistsResponse: {\r\n        fontSize: 18,\r\n        color: \"#CCCCCC\",\r\n        marginBottom: 10,\r\n        textAlign: \"center\"\r\n    }\r\n});","import { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport socket from \"../lib/socket\";\r\nimport supabase from \"../lib/supabase\";\r\nimport { ScreenProps } from \"../lib/type\";\r\nimport { useAuth } from \"../components/AuthProvider\";\r\nimport Ranking from \"../components/Ranking\";\r\nimport gstyles from \"../components/Styles\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nexport default function Results({ route }: ScreenProps) {\r\n    const [players, setPlayers] = useState<any[]>([]);\r\n\r\n    const { user } = useAuth();\r\n\r\n    const { room, name } = route.params;\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"players\", { room });\r\n\r\n        socket.on(\"players\", (data: any) => {\r\n            setPlayers(data.players);\r\n\r\n            data.players.forEach((e: any) => {\r\n                if (e.id == socket.id) addPoint(e.point);\r\n            });\r\n        });\r\n\r\n        return;\r\n    }, []);\r\n\r\n    const addPoint = (point: number) => {\r\n        supabase.auth.updateUser({\r\n            data: {\r\n                point: user?.user_metadata.point + point\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <View style={styles.ranking}>\r\n                <Link to=\"/home\">\r\n                    <View style={{ ...gstyles.button, width: 300 }}>\r\n                        <Text style={gstyles.buttonText}>Accueil</Text>\r\n                    </View>\r\n                </Link>\r\n\r\n                {players.length > 0 && <Text style={styles.player}>{name}</Text>}\r\n\r\n                <View>\r\n                    <Ranking players={players} visible={true} />\r\n                </View>\r\n            </View>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    ranking: {\r\n        gap: 10\r\n    },\r\n    player: {\r\n        fontWeight: \"bold\",\r\n        color: \"#FFFFFF\",\r\n        fontSize: 30,\r\n        width: 300,\r\n        textAlign: \"center\"\r\n    }\r\n});","import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text, TextInput, Pressable, Image, Alert } from \"react-native\";\r\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\r\nimport supabase from \"../lib/supabase\";\r\nimport { ScreenProps } from \"../lib/type\";\r\nimport Layout from \"../components/Layout\";\r\nimport gstyles from \"../components/Styles\";\r\n\r\nfunction Login({ navigation }: any) {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n\r\n    const submit = async () => {\r\n        const { error } = await supabase.auth.signInWithPassword({\r\n            email,\r\n            password\r\n        });\r\n\r\n        if (error) Alert.alert(\"Connexion échouée\");\r\n        else Alert.alert(\"Connexion réussie\");\r\n\r\n        navigation.navigate(\"home\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Text style={styles.homeTitle}>Connexion</Text>\r\n\r\n            <View style={styles.fieldBox}>\r\n                <Text style={styles.label}>Entrez votre E-Mail</Text>\r\n                <TextInput\r\n                    style={gstyles.input}\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    placeholder=\"E-Mail\"\r\n                    keyboardType=\"email-address\" />\r\n            </View>\r\n\r\n            <View style={styles.fieldBox}>\r\n                <Text style={styles.label}>Entrez votre mot de passe</Text>\r\n                <TextInput\r\n                    style={gstyles.input}\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    placeholder=\"Mot de passe\"\r\n                    secureTextEntry={true} />\r\n            </View>\r\n\r\n            <Pressable style={gstyles.button} onPress={submit}>\r\n                <Text style={gstyles.buttonText}>Se connecter</Text>\r\n            </Pressable>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Register({ navigation }: any) {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState<string>(\"\");\r\n\r\n    const submit = async () => {\r\n        if (password !== passwordConfirm) {\r\n            Alert.alert(\"Les mots de passe ne correspondent pas\");\r\n            return;\r\n        }\r\n\r\n        const { error } = await supabase.auth.signUp({\r\n            email,\r\n            password,\r\n            options: {\r\n                data: {\r\n                    point: 0\r\n                }\r\n            }\r\n        });\r\n\r\n        if (error) Alert.alert(\"Inscription échouée\");\r\n        else Alert.alert(\"Inscription réussie\");\r\n\r\n        navigation.navigate(\"home\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Text style={styles.homeTitle}>Inscription</Text>\r\n\r\n            <View style={styles.fieldBox}>\r\n                <Text style={styles.label}>Entrez un E-Mail</Text>\r\n                <TextInput\r\n                    style={gstyles.input}\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    placeholder=\"E-Mail\"\r\n                    keyboardType=\"email-address\" />\r\n            </View>\r\n\r\n            <View style={styles.fieldBox}>\r\n                <Text style={styles.label}>Entrez un mot de passe</Text>\r\n                <TextInput\r\n                    style={gstyles.input}\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    placeholder=\"Mot de passe\"\r\n                    secureTextEntry={true} />\r\n            </View>\r\n\r\n            <View style={styles.fieldBox}>\r\n                <Text style={styles.label}>Confirmez le mot de passe</Text>\r\n                <TextInput\r\n                    style={gstyles.input}\r\n                    value={passwordConfirm}\r\n                    onChangeText={setPasswordConfirm}\r\n                    placeholder=\"Confirmer\"\r\n                    secureTextEntry={true} />\r\n            </View>\r\n\r\n            <Pressable style={gstyles.button} onPress={submit}>\r\n                <Text style={gstyles.buttonText}>S'inscrire</Text>\r\n            </Pressable>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Home({ setPage }: { setPage: React.Dispatch<React.SetStateAction<\"login\" | \"register\" | \"home\">> }) {\r\n    return (\r\n        <View style={styles.home}>\r\n            <Image style={styles.homeImg} source={require(\"../assets/blindcontest.png\")} />\r\n            <Text style={styles.homeTitle}>Connexion</Text>\r\n\r\n            <View style={styles.buttons}>\r\n                <Pressable style={gstyles.button} onPress={() => setPage(\"login\")}>\r\n                    <Text style={gstyles.buttonText}>Connexion</Text>\r\n                </Pressable>\r\n\r\n                <Pressable style={gstyles.button} onPress={() => setPage(\"register\")}>\r\n                    <Text style={gstyles.buttonText}>Inscription</Text>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default function Auth({ navigation }: ScreenProps) {\r\n    const [page, setPage] = useState<\"login\" | \"register\" | \"home\">(\"home\");\r\n\r\n    return (\r\n        <Layout>\r\n            <View style={styles.form}>\r\n                {\r\n                    page !== \"home\" && (\r\n                        <Pressable style={styles.back} onPress={() => setPage(\"home\")}>\r\n                            <Text style={styles.backText}><FontAwesome5 name=\"chevron-left\" /></Text>\r\n                        </Pressable>\r\n                    )\r\n                }\r\n\r\n                { page === \"home\" && <Home setPage={setPage} /> }\r\n                { page === \"login\" && <Login navigation={navigation} /> }\r\n                { page === \"register\" && <Register navigation={navigation} /> }\r\n            </View>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    home: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n    },\r\n    homeImg: {\r\n        height: 200,\r\n        width: 200\r\n    },\r\n    homeTitle: {\r\n        width: 300,\r\n        fontSize: 32,\r\n        textTransform: \"uppercase\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        color: \"slateblue\",\r\n        marginBottom: 10\r\n    },\r\n    buttons: {\r\n        width: 300,\r\n        gap: 10\r\n    },\r\n    form: {\r\n        padding: 10,\r\n    },\r\n    fieldBox: {\r\n        marginBottom: 10\r\n    },\r\n    label: {\r\n        color: \"#FFFFFF\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n\r\n    back: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: 30,\r\n        height: 30,\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        borderRadius: 6,\r\n        borderColor: \"#CCC\",\r\n        backgroundColor: \"#111111\",\r\n        alignSelf: \"flex-start\",\r\n        marginBottom: 10\r\n    },\r\n    backText: {\r\n        color: \"#FFFFFF\",\r\n        fontSize: 14\r\n    }\r\n});","import { StyleSheet, View, Text, Pressable } from \"react-native\";\r\nimport supabase from \"../lib/supabase\";\r\nimport { useAuth } from \"../components/AuthProvider\";\r\nimport Layout from \"../components/Layout\";\r\nimport gstyles from \"../components/Styles\";\r\n\r\nexport default function Profil() {\r\n    const { user } = useAuth();\r\n\r\n    const logOut = async () => {\r\n        await supabase.auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <View style={{ gap: 50 }}>\r\n                <View style={{ display: \"flex\", alignItems: \"center\", gap: 10 }}>\r\n                    <Text style={{ ...gstyles.buttonText, fontSize: 30 }}>Points</Text>\r\n                    \r\n                    <View style={styles.point}>\r\n                        <Text style={styles.pointText}>{user?.user_metadata.point}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View>\r\n                    <Text style={{ ...gstyles.buttonText, textAlign: \"left\", padding: 5 }}>E-Mail</Text>\r\n                    \r\n                    <Text style={gstyles.input}>{user?.email}</Text>\r\n                </View>\r\n\r\n                <Pressable onPress={logOut} style={{ ...gstyles.button, width: 300 }}>\r\n                    <Text style={gstyles.buttonText}>Déconnexion</Text>\r\n                </Pressable>\r\n            </View>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    point: {\r\n        padding: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 100,\r\n        borderColor: \"slateblue\",\r\n        height: 200,\r\n        width: 200,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    pointText: {\r\n        fontSize: 100,\r\n        fontWeight: \"bold\",\r\n        color: \"slateblue\",\r\n    }\r\n});","import { NavigationContainer, DarkTheme } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\r\nimport { useAuth } from \"./AuthProvider\";\r\nimport Home from \"../screens/Home\";\r\nimport Create from \"../screens/Create\";\r\nimport Join from \"../screens/Join\";\r\nimport Lobby from \"../screens/Lobby\";\r\nimport Game from \"../screens/Game\";\r\nimport Results from \"../screens/Results\";\r\nimport Auth from \"../screens/Auth\";\r\nimport Profil from \"../screens/Profil\";\r\n\r\nconst Tab = createBottomTabNavigator<any>();\r\n\r\nconst setScreenOptions = (title: string, name: string) => ({\r\n    title: title,\r\n    tabBarActiveTintColor: \"slateblue\",\r\n    tabBarIcon: ({ color }: any) => <FontAwesome5 name={name} color={color} size={20} solid />,\r\n    tabBarLabelStyle: { fontSize: 12 },\r\n});\r\n\r\nexport default function Navigation() {\r\n    const { user } = useAuth();\r\n\r\n    return (\r\n        <NavigationContainer theme={DarkTheme}>\r\n            <Tab.Navigator initialRouteName=\"home\">\r\n                <Tab.Screen name=\"home\" component={Home} options={setScreenOptions(\"Accueil\", \"home\")} />\r\n                <Tab.Screen name=\"join\" component={Join} options={setScreenOptions(\"Rejoindre\", \"play\")} />\r\n                <Tab.Screen name=\"create\" component={Create} options={setScreenOptions(\"Créer\", \"pen\")} />\r\n                <Tab.Screen name=\"auth\" component={user ? Profil : Auth} options={setScreenOptions(user ? \"Profil\" : \"Connexion\", \"user\")} />\r\n\r\n                <Tab.Screen name=\"lobby\" component={Lobby} options={{ title: \"Joueurs\", tabBarButton: () => <></> }} />\r\n                <Tab.Screen name=\"game\" component={Game} options={{ title: \"Jeu\", tabBarButton: () => <></> }} />\r\n                <Tab.Screen name=\"results\" component={Results} options={{ title: \"Résultats\", tabBarButton: () => <></> }} />\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n};\r\n","import { StyleSheet, SafeAreaView } from \"react-native\";\r\nimport AuthProvider from \"./components/AuthProvider\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <SafeAreaView style={styles.body}>\r\n            <AuthProvider>\r\n                <Navigation />\r\n            </AuthProvider>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        minWidth: 320,\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [557], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["createClient","auth","storage","AsyncStorage","autoRefreshToken","persistSession","detectSessionInUrl","authContext","createContext","useAuth","useContext","_ref","children","_useState","useState","_useState2","_slicedToArray","user","setUser","useEffect","subscription","supabase","onAuthStateChange","_event","session","data","unsubscribe","_jsx","Provider","value","Layout","fadeAnim","useRef","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","View","style","_objectSpread","styles","container","opacity","StyleSheet","create","flex","justifyContent","alignItems","paddingTop","input","width","paddingRight","paddingBottom","paddingLeft","textAlign","borderRadius","borderWidth","borderColor","backgroundColor","color","fontWeight","shadowOffset","height","shadowRadius","shadowColor","shadowOpacity","button","padding","buttonText","fontSize","Home","_jsxs","Image","homeImg","source","require","Text","homeTitle","homeButtons","Link","to","gstyles","textTransform","gap","marginTop","io","CardCategory","id","name","image","activeCategories","setActiveCategories","active","setActive","Pressable","onPress","prev","includes","splice","indexOf","push","categoryCard","categoryCardImg","uri","categoryCardName","Category","_ref2","_useState3","_useState4","categories","setCategories","socket","emit","on","ScrollView","categoryContainer","map","e","icons","url","overflow","display","flexDirection","flexWrap","margin","Create","navigation","room","setRoom","_useState5","_useState6","time","setTime","_useState7","_useState8","nbrQuestions","setNbrQuestions","key","createTitle","createBox","createBoxTitle","TextInput","createInput","onChangeText","inputMode","nTime","Number","parseInt","nQuestions","isNaN","Alert","alert","navigate","host","createButton","marginBottom","textDecorationLine","textDecorationStyle","createPlayers","borderStyle","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","createPlayersTitle","borderBottomWidth","createPlayersTitleText","createPlayersTitleNbr","createPlayersList","overflowY","createPlayersListName","marginRight","marginLeft","Join","login","_asyncToGenerator","access","apply","arguments","onSubmitEditing","placeholder","PlayerList","players","playersTitle","playersTitleText","length","playersList","playersListNoPlayer","playersListName","playersTitleNbr","Lobby","route","setName","logged","setLogged","setPlayers","_route$params","params","lobbyTitle","lobbyName","lobbyNameBox","disabled","spotifyApi","axios","baseURL","defaults","headers","token","searchSongs","search","list","get","tracks","items","title","artists","album","images","_x","SearchSong","song","answered","setAnswered","setMyAnswer","setCorrect","res","correct","songImg","songText","songTitle","songArtist","join","Ranking","visible","ranking","rankingTitle","rankingTitleText","rankingList","rankingListName","point","rankingTitleNbr","rankingListNoPlayer","Timer","nbr","play","count","setCount","timerId","setTimerID","setInterval","clearInterval","_Fragment","soundObject","Audio","Game","songs","setSongs","answer","setAnswer","myAnswer","_useState9","_useState10","setSearch","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","rankingVisible","setRankingVisible","_useState17","_useState18","timer","setTimer","_useState19","_useState20","roomTime","setRoomTime","onChangeSearch","playSong","audio","console","log","cheat","setTimeout","getStatusAsync","isLoaded","stopAsync","unloadAsync","loadAsync","playAsync","_ref3","_x2","game","player","imageResponse","imageTextContainer","imageText","titleResponse","artistsResponse","result","resultBox","resultImg","resultText","resultTitle","searchTitle","searchInput","songContainer","position","left","zIndex","rankingButton","top","right","rankingImage","Results","forEach","addPoint","updateUser","user_metadata","Login","email","setEmail","password","setPassword","submit","signInWithPassword","error","fieldBox","label","keyboardType","secureTextEntry","Register","passwordConfirm","setPasswordConfirm","_ref4","signUp","options","_ref5","setPage","home","buttons","Auth","_ref6","page","form","back","backText","FontAwesome5","alignSelf","Profil","logOut","signOut","pointText","Tab","createBottomTabNavigator","setScreenOptions","tabBarActiveTintColor","tabBarIcon","size","solid","tabBarLabelStyle","Navigation","NavigationContainer","theme","DarkTheme","Navigator","initialRouteName","Screen","component","tabBarButton","App","SafeAreaView","body","AuthProvider","minWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}